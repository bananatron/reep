//SHARED.js
//This page is shared among all pages.





//////////////
// Helpers //
////////////

cleanString = function(str){
  return str.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
}


var toggleSelected = function(self){
  if ( $(self).attr('data-selected') == 'true' ) {
    $(self).attr('data-selected', 'false'); 
  } else {
    $(self).attr('data-selected', 'true'); 
  }
}

var loggedIn = function loggedIn(){
  var authData = ref.getAuth();
  if (authData) {
    return true;
    console.log("User " + authData.uid + " is logged in via " + authData.provider);
  } else {
    return false;
    console.log(authData);
    console.log("User is logged out");
  }
}

var render = function render(){
  $('body').show();
}

//Client side redirect for no auth
var validateAuth = function validateAuth(){
  if (loggedIn() == false && window.location.pathname != '/login'){
    window.location.replace("/login#noauth");
  } else {
    render();
  }
}

$('.select-hide').on('click', function(){
  $('#'+$(this).data().hideId).slideToggle(100);
  console.log($(this).data().hideId);
});

var ref = new Firebase("https://reep.firebaseio.com");
if (ref.getAuth()) var uid = ref.getAuth().uid.toString();
validateAuth();

if (loggedIn()){
  
  ref.child('users').child(uid).child('score').on('value', function(snapshot) {
    $('#score').text(snapshot.val());
  });   
  
}

if (window.location.hash == '#noauth') new Notification('You need to log in first.', 'alert');


//Default focus set that all users start with
var focus = {
  d_chore: {
    name: 'Chore',
    color: '#cfd2da',
    icon: 'gear-b'
  },
  d_family: {
    name: 'Family',
    color: '#1997c6',
    icon: 'android-people'
  },
  d_financial: {
    name: 'Financial',
    color: '#1bc98e',
    icon: 'ios-cart'
  },
  d_personal: {
    name: 'Personal',
    color: '#9f86ff',
    icon: 'ios-body'
  },
  d_work: {
    name: 'Work',
    color: '#e64759',
    icon: 'ios-briefcase'
  }
}

////////////////
// Listeners //
//////////////

//Store new user creds on first signin (fb)

ref.onAuth(function(authData) {
  
  if (ref.getAuth() != null){
  ref.child('users').child(authData.uid).once('value', function(snapshot) {
    
    if (snapshot.val() == null){ //User doesn't yet exist in users table
      
      if (authData.password.email){
        ref.child("users").child(authData.uid).set({
          email: authData.password.email,
          provider: authData.provider,
          focus,
          score: 0
        });
      } else {
        ref.child("users").child(authData.uid).set({
          provider: authData.provider
        });
      }
      
    }
  }, function (errorObj) {
    console.log('firebase error', errorObj)
  });
  }
});

//Login button
$('#user-login').on('click', function(){

  ref.authWithPassword({
    email    : $('#login-email-input').val().trim(),
    password : $('#login-pass-input').val().trim()
  }, function(error, authData) {
    if (error) {
      if (error.toString().indexOf('user does not exist') != -1){
        
        var removeYellow = function(){
          $('#user-register').addClass('bg-darkblue');
          $('#user-register').removeClass('bg-yellow');
        }
        $('#user-register').addClass('bg-yellow');
        $('#user-register').removeClass('bg-darkblue');
        
        new Notification( 
          "That user doesn't exist, but you can <span class='bg-yellow'>register</span> below with that information",'alert', removeYellow 
        );
        
      } else {
        if (authData === undefined){
          new Notification("That's not valid user info", 'alert');
        } else {
          new Notification(authData);
        }
       
      }
    } else {
      //new Notification("Login succesful!");
      window.location.href = "/";
    }
  });
});


//Register button
$('#user-register').on('click', function(){
  ref.createUser({
    email    : $('#login-email-input').val().trim(),
    password : $('#login-pass-input').val().trim()
  }, function(error, userData) {
    if (error) {
      new Notification(error, 'alert' );
    } else {
      console.log(userData, userData.uid);
      new Notification( "Hoorah - You've created an account!" );
    }
  });
});

//Reset email option
$('#user-resetpass').on('click', function(){
  ref.resetPassword({
      email : $('#login-email-input').val().trim(),
    }, function(error) {
    if (error === null) {
      new Notification("Password reset email sent successfully");
    } else {
      if (error.toString().indexOf('Route') != -1) {
        new Notification('Please enter your email below so we can get you reset', 'alert')
      } else {
        new Notification(error, 'alert');
      }
    }
  });
});

// It is of great use to the sailor to know the length of his line, 
// though he cannot with it fathom all the depths of the ocean.
//  -John Locke

/////////////////
// Navigation //
///////////////

if (loggedIn()){
  
  //Login / Logout nav
  var $loginlink = $('#login-link');
  $loginlink.children().text('Logout');
  $loginlink.on('click', function(){
    ref.unauth();
  });
  
  //Add Task
  $('.add-task').show();
}
// Every once in a while, someone will mail me a single popcorn kernel that didn't pop. 
// I'll get out a fresh kernel, tape it to a piece of paper and mail it back to them.
// - Orville Redenbacher

////////////////////
// Notifications //
//////////////////

function Notification(text, type, trigger) {
  this.text = text;
  this.type = type || "";
  
  this.init = function(){
    var note = $("<div class='note " + this.type + "' >" + this.text + "<span class='notification__close ion-close-circled'></span></div>");
    $('.notifications').append(note);
    if (trigger){
      $(note).on('click', function(){ trigger()  })
    }
  }
  
  this.init();
}

$('.notifications').on('click', function(){
  if ($(event.target).attr('class').indexOf('note') != -1){
    var nn = event.target;
    $(nn).slideUp( 200, function() {
      $(nn).remove();
    })
  }
});


var buildFocusOption = function(focusObj){
  
  //Using jquery this time around to see which is prettier
  var focus__setting = $('<div></div>').addClass('focus__setting');
  
  var focus__color = $('<div></div>')
  .addClass('focus__color')
  .css('background-color', focusObj.color);
  focus__setting.append(focus__color);
  
  var focus__icon = $('<div></div>')
  .addClass('focus__icon')
  .html('<span class="ion-' + focusObj.icon + '"></span>');
  focus__setting.append(focus__icon);
  
  var focus__name = $('<div></div>')
  .addClass('focus__name')
  .text(focusObj.name);
  focus__setting.append(focus__name);
  
  var focus__action = $('<div></div>')
  .addClass('focus__action focus-edit bg-grey')
  .html('<span class="ion-edit"></span>');
  focus__setting.append(focus__action);
  
  var focus__action = $('<div></div>')
  .addClass('focus__action focus-delete bg-red')
  .html('<span class="ion-close"></span>');
  focus__setting.append(focus__action);
  
  $('.focus-container').append(focus__setting);
  
}

//Create focus setting option things
if (loggedIn()){
  ref.child('users').child(uid).child('focus').once('value', function(snapshot) {
    $.each( snapshot.val(), function( key, focusData ) {
      buildFocusOption(focusData);
    });
  });
  
  $('.current-email').text(ref.getAuth().password.email);
  
}

$('#submit-change-email').on('click', function(){
  ref.changeEmail({
    oldEmail : ref.getAuth().password.email,
    newEmail : $('#input-new-email').val(),
    password : $('#input-new-email-password').val()
  }, function(error) {
    if (error === null) {
      Notification("Email changed successfully! Your changes will become effective the next time you log in");
    } else {
      Notification(error, 'alert');
    }
  });
})

$('#submit-change-password').on('click', function(){
  if ($('#input-new-password-newpass').val() == $('#input-new-password-newpass_again').val()){
    ref.changePassword({
      email       : ref.getAuth().password.email,
      oldPassword : $('#input-new-password-oldpass').val(),
      newPassword : $('#input-new-password-newpass').val()
    }, function(error) {
      if (error === null) {
        ('#input-new-password-newpass_again, #input-new-password-newpass, #input-new-password-oldpass').val('')
        Notification("Password changed successfully!");
      } else {
        Notification(error, 'alert');
      }
    });
  } else {
    Notification("Your passwords don't match");
  }

});

var Task = {
    title: "",
    details: "",
    score: 0,
    focus: []
}

var Filters = [
   { attr: 'complete', value: false }
]


var submitTaskForm = function(){
  ref.child("tasks").child(uid).push({
    title: cleanString(Task.title),
    details: cleanString(Task.details),
    score: Task.score,
    focus: Task.focus,
    complete: false,
    added_at: Firebase.ServerValue.TIMESTAMP,
    public: false
  });
  
  clearTaskForm(); //Empties form
  hideNewTaskForm(); //Rolls it up
}

var clearTaskForm = function(){
  $('.task-form-field').val('');
  $('.focus_option, .score_option').attr('data-selected', 'false')
  
  Task = { 
    title: "",
    details: "",
    score: 0,
    focus: [],
    complete: false
  }
}

var setFilters = function(element){
  var dataFilter = $(element).data().taskFilter;
  var newFilter = {};
  newFilter['attr'] = Object.keys(dataFilter)[0];
  newFilter['value'] = dataFilter[Object.keys(dataFilter)[0]]
  
  Filters = [newFilter];
  refreshTasks(uid);
}

$('.task-filters__option').on('click', function(){
  setFilters(this);
})

var validateModel = function(model, callback) {
  var validationErrors = [];
  
  if (model.title.length < 1){
    validationErrors.push('You need a title for your task');
  };
  if (model.title.length > 40){
    validationErrors.push('Your title is bit too long');
  };
  if (model.focus < 1){
    validationErrors.push('You need to choose a focus');
  };
  if (model.score == 0){
    validationErrors.push('You need to choose a score');
  };
  
  if (validationErrors.length > 0) {
    validationErrors.forEach(function(errorMsg){
      new Notification(errorMsg, 'alert');
    });
    window.scrollTo(0, 0);
  } else {
    callback();
  }
}


//Build focus options from user data
var buildFocusOptions = function(){
  ref.child('users').child(uid).child('focus').once('value', function(snapshot) {
    $.each(snapshot.val(), function(key, value){
      var $focusOption = $("<div class='focus_option' data-focus-id='"+ key +"' data-focus-color='"+ value.color +"' data-selected='false'><span class='ion-" + value.icon + " task__icon'></span>"+ value.name +"</div>")
      $('.task__focusselect').append($focusOption);
    })
  });
}
//only do this on correct page?
buildFocusOptions();


var clearTasks = function(){
  $('.tasks_container').empty();
}

var buildTask = function(id, title, details, score, focus, focusObj, complete) {
  
  var task = this.view = document.createElement("div");
  task.setAttribute('class', 'task');
  task.setAttribute('data-id', id);
  task.setAttribute('data-score', score);
  
    var task_header = task.appendChild(document.createElement("div"));
    task_header.setAttribute('class', 'task__header');
    
    var header_focus_container = task_header.appendChild(document.createElement("div"));
    header_focus_container.setAttribute('class', 'header_focus_container')
    
      focus.forEach( function(ff, ii) {
        var header_focus = header_focus_container.appendChild(document.createElement("div"));
        header_focus.setAttribute('class', 'header_focus');
        header_focus.innerHTML = "<span class='ion-"+ focusObj[ff].icon +"'></span>";
        task_header.appendChild(header_focus_container);
      });
      
      var header_title = task_header.appendChild(document.createElement("div"));
      header_title.setAttribute('class', 'header_title');
      header_title.innerHTML = title;
      var header_score = task_header.appendChild(document.createElement("div"));
      if (complete){
        header_score.setAttribute('class', 'header_score score-complete');
      } else {
        header_score.setAttribute('class', 'header_score score-incomplete');
      }
      
      header_score.innerHTML = "<span class='ion-flash'></span> " + score + "</div>";
      
    var task_body = task.appendChild(document.createElement("div"));
    task_body.setAttribute('class', 'task__body bg-darkblue');

      if (details){
        var task__body_details = task_body.appendChild(document.createElement("div"));
        task__body_details.setAttribute('class', 'task__body_details');
        task__body_details.innerHTML = details;
      }
      
      var task__body_focus_container = task_body.appendChild(document.createElement("div"));
      task__body_focus_container.setAttribute('class', 'task__body_focus_container');
      focus.forEach(function(ff, ii){
        var task__body_focus = task__body_focus_container.appendChild(document.createElement("div"));
        task__body_focus.setAttribute('class', 'task__body_focus');
        task__body_focus.innerHTML = focusObj[ff].name;
        task__body_focus.style.color = focusObj[ff].color;
      });
      
      var task__body_actions = task_body.appendChild(document.createElement("div"));
      task__body_actions.setAttribute('class', 'task__body_actions');
        var task_action = task__body_actions.appendChild(document.createElement("div"));
        task_action.setAttribute('class', 'task__action bg-green-hover');
        task_action.setAttribute('data-action', 'completeTask');
        task_action.innerHTML = "<span class='ion-checkmark'></span>";
        var task_action = task__body_actions.appendChild(document.createElement("div"));
        task_action.setAttribute('class', 'task__action bg-red-hover');
        task_action.setAttribute('data-action', 'deleteTask');
        task_action.innerHTML = "<span class='ion-trash-a'></span>";
        
  return task;
}

var getIdFromElement = function(element){
  return $(element).closest('.task').attr('data-id');
}

var deleteTask = function(node){
  var rid = getIdFromElement(node);
  $(node).closest('.task').hide();
  ref.child("tasks").child(uid).child(rid).set(null);
}

var completeTask = function(node){
  var taskScore = $(node).closest('.task').data().score;
  var currentUserScore;
  ref.child('users').child(uid).child('score').once('value', function(snapshot) {
    currentUserScore = snapshot.val();
  });
  var newScore = currentUserScore + taskScore;
  ref.child('users').child(uid).update({ score: newScore });

  var rid = getIdFromElement(node);
  ref.child("tasks").child(uid).child(rid).update({complete: true});
}

var refreshTasks = function(uid){
  //On change, reflow
  ref.child('tasks').child(uid).on('value', function(tasksSnap) {
    if (!$.isEmptyObject(tasksSnap.val())){
      $('.no-tasks-message').hide();
      var task_collection = $('<div></div>');
      clearTasks();
      
      ref.child('users').child(uid).child('focus').on('value', function(focusSnap) {
        
        var focusObj = focusSnap.val(); //User focus' for generation/comparison

        $.each( tasksSnap.val(), function( key, vv ) {
          Filters.forEach(function(filter){
            if (vv[filter['attr']] == filter['value']){
              task_collection.append(buildTask(key, vv.title, vv.details, vv.score, vv.focus, focusObj, vv.complete));
            }
          });
        }); 
        
        $('.tasks_container').append($(task_collection).children().get().reverse());
        $('.tasks_container').addClass('unhidden');
        
      });
      
    } else { //Case where you're deleting the last one
      clearTasks();
      $('.no-tasks-message').show();
    }
  });
}



//Listeners
if (ref.getAuth()){
  var uid = ref.getAuth().uid;
  refreshTasks(uid);
} else {
  console.log("No user logged in.") 
}

//Show/hide new form
var hideNewTaskForm = function(){
  $( "#task-new" ).slideUp( "fast", function() {
    $( "#task-new" ).hide();
  });
}

$('.right').on('click', '.task-new__close', function(){
  hideNewTaskForm();
});

var showNewTaskForm = function(){
  $( "#task-new" ).slideDown( "fast", function(){
    $( "#task-new" ).show();
  })
}
$('.right').on('click', '.add-task', function(){
  showNewTaskForm();
});


//Task header toggle
$('.tasks_container').on('click', '.task__header', function() {
  $(this).parent().find('.task__body').slideToggle(100);
});

//Task Action Buttons
$('.tasks_container').on('click', '.task__action', function() {
  window[$(this).attr('data-action').toString()](this);
});

//Text Inputs
$('.task__input').on('keyup', function(){ //Title
  Task.title = $(this).val();
})
$('.task__textarea').on('keyup', function(){ //Details
  Task.details = $(this).val();
})

//Focus Selection
$('.right').on('click', '.focus_option', function(){
  toggleSelected(this);
  
  //Modify model
  Task.focus = [];
  $('.focus_option[data-selected="true"]').each(function( ii, node ) {
    Task.focus.push( $(node).data().focusId );
  });
});

//Score Selection
$('.right').on('click', '.score_option', function(){
  $('.score_option[data-selected="true"]').attr('data-selected', 'false');
  toggleSelected(this);
  Task.score = parseInt( $(this).text().trim() )
});

//Submit button
$('.right').on('click', '#task_submit', function(){
  validateModel(Task, submitTaskForm);
});

//# sourceMappingURL=data:application/json;base64,