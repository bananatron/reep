
//////////////
// Helpers //
////////////

var validateModel = function(model){ //Maybe put in notifications here?
  if (model.summary == "" || model.summary == undefined) return false;
  if (model.score == 0 || model.score == undefined) return false

  return true;
}

var toggleSelected = function(self){
  if ( $(self).attr('data-selected') == 'true' ) {
    $(self).attr('data-selected', 'false'); 
  } else {
    $(self).attr('data-selected', 'true'); 
  }
}

var loggedIn = function loggedIn(){
  var authData = ref.getAuth();
  if (authData) {
    return true;
    console.log("User " + authData.uid + " is logged in via " + authData.provider);
  } else {
    return false;
    console.log(authData);
    console.log("User is logged out");
  }
}

var ref = new Firebase("https://reep.firebaseio.com");


var isNewUser = function() {
  var uid = ref.getAuth().uid.toString();
  var userRef = ref.child('users').child(uid);
  userRef.once("value", function(snapshot) {
    return true;
  }, function (errorObject) {
    return false;
  });
}




//Listeners

//Store new user creds on first signin (fb)
ref.onAuth(function(authData) {
  
  if (authData && isNewUser) {
    if (authData.password.email){
      ref.child("users").child(authData.uid).set({
        email: authData.password.email,
        provider: authData.provider
      });
    } else {
      ref.child("users").child(authData.uid).set({
        provider: authData.provider
      });
    }
  }
  
});

//Login button
$('#user-login').on('click', function(){

  ref.authWithPassword({
    email    : $('#login-email-input').val().trim(),
    password : $('#login-pass-input').val().trim()
  }, function(error, authData) {
    if (error) {
      if (error.toString().indexOf('user does not exist') != -1){
        
        var removeYellow = function(){
          $('#user-register').addClass('bg-darkblue');
          $('#user-register').removeClass('bg-yellow');
        }
        $('#user-register').addClass('bg-yellow');
        $('#user-register').removeClass('bg-darkblue');
        
        new Notification( 
          "That user doesn't exist, but you can <span class='bg-yellow'>register</span> below with that information",'alert', removeYellow 
        );
        
      } else {
        if (authData === undefined){
          new Notification("That's not valid user info", 'alert');
        } else {
          new Notification(authData);
        }
       
      }
    } else {
      //new Notification("Login succesful!");
      window.location.href = "/";
    }
  });
});


//Register button
$('#user-register').on('click', function(){
  ref.createUser({
    email    : $('#login-email-input').val().trim(),
    password : $('#login-pass-input').val().trim()
  }, function(error, userData) {
    if (error) {
      new Notification(error, 'alert' );
    } else {
      console.log(userData, userData.uid);
      new Notification( "Hoorah - You've created an account!" );
    }
  });
});

//Reset email option
$('#user-resetpass').on('click', function(){
  ref.resetPassword({
      email : $('#login-email-input').val().trim(),
    }, function(error) {
    if (error === null) {
      new Notification("Password reset email sent successfully");
    } else {
      if (error.toString().indexOf('Route') != -1) {
        new Notification('Please enter your email below so we can get you reset', 'alert')
      } else {
        new Notification(error, 'alert');
      }
    }
  });
});

// It is of great use to the sailor to know the length of his line, 
// though he cannot with it fathom all the depths of the ocean.
//  -John Locke

/////////////////
// Navigation //
///////////////

if (loggedIn()){
  
  //Login / Logout nav
  var $loginlink = $('#login-link');
  $loginlink.children().text('Logout');
  $loginlink.on('click', function(){
    ref.unauth();
  });
  
  //Add Task
  $('#add-task').show();
}

// Every once in a while, someone will mail me a single popcorn kernel that didn't pop. 
// I'll get out a fresh kernel, tape it to a piece of paper and mail it back to them.
// - Orville Redenbacher

////////////////////
// Notifications //
//////////////////

function Notification(text, type, trigger) {
  this.text = text;
  this.type = type || "";
  
  this.init = function(){
    var note = $("<div class='note " + this.type + "' >" + this.text + "<span class='notification__close ion-close-circled'></span></div>");
    $('.notifications').append(note);
    if (trigger){
      $(note).on('click', function(){ trigger()  })
    }
  }
  
  this.init();
}

$('.notifications').on('click', function(){
  if ($(event.target).attr('class').indexOf('note') != -1){
    var nn = event.target;
    $(nn).slideUp( 200, function() {
      $(nn).remove();
    })
  }
});



var Task = {
    title: "",
    details: "",
    score: 0,
    focus: []
}

var submitTaskForm = function(){
  ref.child("tasks").child(uid).push({
    title: Task.title,
    details: Task.details,
    score: Task.score,
    focus: Task.focus,
    complete: false,
    public: false
  });
  
  clearTaskForm();
}

var clearTaskForm = function(){
  $('.task-form-field').val('');
  $('.focus_option, .score_option').attr('data-selected', 'false')
  
  Task = { 
    title: "",
    details: "",
    score: 0,
    focus: [],
    complete: false
  }
  
}

//!! WRITE validation
var validateModel = function() {
  return true;
}


var buildTask = function(id, title, details, score, focus, complete) {
  
  console.log('building task', id, title, details, score, focus, complete);
  var task = this.view = document.createElement("div");
  task.setAttribute('class', 'task');
  task.setAttribute('id', 'id');
  
    var task_header = task.appendChild(document.createElement("div"));
    task_header.setAttribute('class', 'task__header');
      var header_focus = task_header.appendChild(document.createElement("div"));
      header_focus.setAttribute('class', 'header_focus');
      header_focus.innerHTML = "<span class='ion-coffee'></span>";
      var header_title = task_header.appendChild(document.createElement("div"));
      header_title.setAttribute('class', 'header_title');
      header_title.innerHTML = title;
      var header_score = task_header.appendChild(document.createElement("div"));
      header_score.setAttribute('class', 'header_score');
      header_score.innerHTML = "<span class='ion-flash'></span>" + score + "</div>";
      
    var task_body = task.appendChild(document.createElement("div"));
    task_body.setAttribute('class', 'task__body bg-darkblue');
      var task__body_details = task_body.appendChild(document.createElement("div"));
      task__body_details.setAttribute('class', 'task__body_details');
      task__body_details.innerHTML = details;
      
      var task__body_actions = task_body.appendChild(document.createElement("div"));
      task__body_actions.setAttribute('class', 'task__body_actions');
        var task_action = task__body_actions.appendChild(document.createElement("div"));
        task_action.setAttribute('class', 'task__action bg-grey-hover');
        task_action.innerHTML = "<span class='ion-edit'></span>";
        var task_action = task__body_actions.appendChild(document.createElement("div"));
        task_action.setAttribute('class', 'task__action bg-green-hover');
        task_action.innerHTML = "<span class='ion-checkmark'></span>";
        var task_action = task__body_actions.appendChild(document.createElement("div"));
        task_action.setAttribute('class', 'task__action bg-red-hover');
        task_action.innerHTML = "<span class='ion-close'></span>";
        
  $(task).appendTo('.tasks_container');
}



//Listeners
if (ref.getAuth()){
    
  var uid = ref.getAuth().uid;
  
  //On change, reflow
  ref.child("tasks").child(uid).on("value", function(snapshot) {
    if (!$.isEmptyObject(snapshot.val())){
      $.each( snapshot.val(), function( key, value ) {
        buildTask(key, value.title, value.details, value.score, value.focus, value.complete);
      }); 
    }
  });

} else { console.log("No user logged in.") }


//Show/hide new form
$('.task-new__close').on('click', function(){
  $( "#task-new" ).slideUp( "fast", function() {
    $( "#task-new" ).hide();
  });
});

$('#add-task').on('click', function(){
  $( "#task-new" ).slideDown( "fast", function(){
    $( "#task-new" ).show();
  })
});


//Task header toggle !!Review

$('.tasks_container').on('click', '.task__header', function() {
  $(this).parent().find('.task__body').slideToggle(100);
});



//Text Inputs
$('.task__input').on('keyup', function(){ //Title
  Task.title = $(this).val();
})
$('.task__textarea').on('keyup', function(){ //Details
  Task.details = $(this).val();
})



//Focus Selection
$('.focus_option').on('click', function(){
  toggleSelected(this);
  
  //Modify model
  Task.focus = [];
  $('.focus_option[data-selected="true"]').each(function( ii, node ) {
    Task.focus.push( $(node).text() );
  });
});


//Score Selection
$('.score_option').on('click', function(){
  $('.score_option[data-selected="true"]').attr('data-selected', 'false');
  toggleSelected(this);
  Task.score = parseInt( $(this).text().trim() )
});


//Submit button
$('#task_submit').on('click', function(){
  if (validateModel(Task)){
    submitTaskForm();
  };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiLCJsb2dpbi5qcyIsIm5hdi5qcyIsIm5vdGlmaWNhdGlvbnMuanMiLCJ0YXNrcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3hHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQy9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJhbGwubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLy8vLy8vLy8vLy8vL1xuLy8gSGVscGVycyAvL1xuLy8vLy8vLy8vLy8vXG5cbnZhciB2YWxpZGF0ZU1vZGVsID0gZnVuY3Rpb24obW9kZWwpeyAvL01heWJlIHB1dCBpbiBub3RpZmljYXRpb25zIGhlcmU/XG4gIGlmIChtb2RlbC5zdW1tYXJ5ID09IFwiXCIgfHwgbW9kZWwuc3VtbWFyeSA9PSB1bmRlZmluZWQpIHJldHVybiBmYWxzZTtcbiAgaWYgKG1vZGVsLnNjb3JlID09IDAgfHwgbW9kZWwuc2NvcmUgPT0gdW5kZWZpbmVkKSByZXR1cm4gZmFsc2VcblxuICByZXR1cm4gdHJ1ZTtcbn1cblxudmFyIHRvZ2dsZVNlbGVjdGVkID0gZnVuY3Rpb24oc2VsZil7XG4gIGlmICggJChzZWxmKS5hdHRyKCdkYXRhLXNlbGVjdGVkJykgPT0gJ3RydWUnICkge1xuICAgICQoc2VsZikuYXR0cignZGF0YS1zZWxlY3RlZCcsICdmYWxzZScpOyBcbiAgfSBlbHNlIHtcbiAgICAkKHNlbGYpLmF0dHIoJ2RhdGEtc2VsZWN0ZWQnLCAndHJ1ZScpOyBcbiAgfVxufVxuXG52YXIgbG9nZ2VkSW4gPSBmdW5jdGlvbiBsb2dnZWRJbigpe1xuICB2YXIgYXV0aERhdGEgPSByZWYuZ2V0QXV0aCgpO1xuICBpZiAoYXV0aERhdGEpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgICBjb25zb2xlLmxvZyhcIlVzZXIgXCIgKyBhdXRoRGF0YS51aWQgKyBcIiBpcyBsb2dnZWQgaW4gdmlhIFwiICsgYXV0aERhdGEucHJvdmlkZXIpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgICBjb25zb2xlLmxvZyhhdXRoRGF0YSk7XG4gICAgY29uc29sZS5sb2coXCJVc2VyIGlzIGxvZ2dlZCBvdXRcIik7XG4gIH1cbn1cbiIsInZhciByZWYgPSBuZXcgRmlyZWJhc2UoXCJodHRwczovL3JlZXAuZmlyZWJhc2Vpby5jb21cIik7XG5cblxudmFyIGlzTmV3VXNlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgdWlkID0gcmVmLmdldEF1dGgoKS51aWQudG9TdHJpbmcoKTtcbiAgdmFyIHVzZXJSZWYgPSByZWYuY2hpbGQoJ3VzZXJzJykuY2hpbGQodWlkKTtcbiAgdXNlclJlZi5vbmNlKFwidmFsdWVcIiwgZnVuY3Rpb24oc25hcHNob3QpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSwgZnVuY3Rpb24gKGVycm9yT2JqZWN0KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KTtcbn1cblxuXG5cblxuLy9MaXN0ZW5lcnNcblxuLy9TdG9yZSBuZXcgdXNlciBjcmVkcyBvbiBmaXJzdCBzaWduaW4gKGZiKVxucmVmLm9uQXV0aChmdW5jdGlvbihhdXRoRGF0YSkge1xuICBcbiAgaWYgKGF1dGhEYXRhICYmIGlzTmV3VXNlcikge1xuICAgIGlmIChhdXRoRGF0YS5wYXNzd29yZC5lbWFpbCl7XG4gICAgICByZWYuY2hpbGQoXCJ1c2Vyc1wiKS5jaGlsZChhdXRoRGF0YS51aWQpLnNldCh7XG4gICAgICAgIGVtYWlsOiBhdXRoRGF0YS5wYXNzd29yZC5lbWFpbCxcbiAgICAgICAgcHJvdmlkZXI6IGF1dGhEYXRhLnByb3ZpZGVyXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVmLmNoaWxkKFwidXNlcnNcIikuY2hpbGQoYXV0aERhdGEudWlkKS5zZXQoe1xuICAgICAgICBwcm92aWRlcjogYXV0aERhdGEucHJvdmlkZXJcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBcbn0pO1xuXG4vL0xvZ2luIGJ1dHRvblxuJCgnI3VzZXItbG9naW4nKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xuXG4gIHJlZi5hdXRoV2l0aFBhc3N3b3JkKHtcbiAgICBlbWFpbCAgICA6ICQoJyNsb2dpbi1lbWFpbC1pbnB1dCcpLnZhbCgpLnRyaW0oKSxcbiAgICBwYXNzd29yZCA6ICQoJyNsb2dpbi1wYXNzLWlucHV0JykudmFsKCkudHJpbSgpXG4gIH0sIGZ1bmN0aW9uKGVycm9yLCBhdXRoRGF0YSkge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgaWYgKGVycm9yLnRvU3RyaW5nKCkuaW5kZXhPZigndXNlciBkb2VzIG5vdCBleGlzdCcpICE9IC0xKXtcbiAgICAgICAgXG4gICAgICAgIHZhciByZW1vdmVZZWxsb3cgPSBmdW5jdGlvbigpe1xuICAgICAgICAgICQoJyN1c2VyLXJlZ2lzdGVyJykuYWRkQ2xhc3MoJ2JnLWRhcmtibHVlJyk7XG4gICAgICAgICAgJCgnI3VzZXItcmVnaXN0ZXInKS5yZW1vdmVDbGFzcygnYmcteWVsbG93Jyk7XG4gICAgICAgIH1cbiAgICAgICAgJCgnI3VzZXItcmVnaXN0ZXInKS5hZGRDbGFzcygnYmcteWVsbG93Jyk7XG4gICAgICAgICQoJyN1c2VyLXJlZ2lzdGVyJykucmVtb3ZlQ2xhc3MoJ2JnLWRhcmtibHVlJyk7XG4gICAgICAgIFxuICAgICAgICBuZXcgTm90aWZpY2F0aW9uKCBcbiAgICAgICAgICBcIlRoYXQgdXNlciBkb2Vzbid0IGV4aXN0LCBidXQgeW91IGNhbiA8c3BhbiBjbGFzcz0nYmcteWVsbG93Jz5yZWdpc3Rlcjwvc3Bhbj4gYmVsb3cgd2l0aCB0aGF0IGluZm9ybWF0aW9uXCIsJ2FsZXJ0JywgcmVtb3ZlWWVsbG93IFxuICAgICAgICApO1xuICAgICAgICBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChhdXRoRGF0YSA9PT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICBuZXcgTm90aWZpY2F0aW9uKFwiVGhhdCdzIG5vdCB2YWxpZCB1c2VyIGluZm9cIiwgJ2FsZXJ0Jyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmV3IE5vdGlmaWNhdGlvbihhdXRoRGF0YSk7XG4gICAgICAgIH1cbiAgICAgICBcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy9uZXcgTm90aWZpY2F0aW9uKFwiTG9naW4gc3VjY2VzZnVsIVwiKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCI7XG4gICAgfVxuICB9KTtcbn0pO1xuXG5cbi8vUmVnaXN0ZXIgYnV0dG9uXG4kKCcjdXNlci1yZWdpc3RlcicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gIHJlZi5jcmVhdGVVc2VyKHtcbiAgICBlbWFpbCAgICA6ICQoJyNsb2dpbi1lbWFpbC1pbnB1dCcpLnZhbCgpLnRyaW0oKSxcbiAgICBwYXNzd29yZCA6ICQoJyNsb2dpbi1wYXNzLWlucHV0JykudmFsKCkudHJpbSgpXG4gIH0sIGZ1bmN0aW9uKGVycm9yLCB1c2VyRGF0YSkge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgbmV3IE5vdGlmaWNhdGlvbihlcnJvciwgJ2FsZXJ0JyApO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyh1c2VyRGF0YSwgdXNlckRhdGEudWlkKTtcbiAgICAgIG5ldyBOb3RpZmljYXRpb24oIFwiSG9vcmFoIC0gWW91J3ZlIGNyZWF0ZWQgYW4gYWNjb3VudCFcIiApO1xuICAgIH1cbiAgfSk7XG59KTtcblxuLy9SZXNldCBlbWFpbCBvcHRpb25cbiQoJyN1c2VyLXJlc2V0cGFzcycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gIHJlZi5yZXNldFBhc3N3b3JkKHtcbiAgICAgIGVtYWlsIDogJCgnI2xvZ2luLWVtYWlsLWlucHV0JykudmFsKCkudHJpbSgpLFxuICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgaWYgKGVycm9yID09PSBudWxsKSB7XG4gICAgICBuZXcgTm90aWZpY2F0aW9uKFwiUGFzc3dvcmQgcmVzZXQgZW1haWwgc2VudCBzdWNjZXNzZnVsbHlcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChlcnJvci50b1N0cmluZygpLmluZGV4T2YoJ1JvdXRlJykgIT0gLTEpIHtcbiAgICAgICAgbmV3IE5vdGlmaWNhdGlvbignUGxlYXNlIGVudGVyIHlvdXIgZW1haWwgYmVsb3cgc28gd2UgY2FuIGdldCB5b3UgcmVzZXQnLCAnYWxlcnQnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3IE5vdGlmaWNhdGlvbihlcnJvciwgJ2FsZXJ0Jyk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn0pO1xuIiwiLy8gSXQgaXMgb2YgZ3JlYXQgdXNlIHRvIHRoZSBzYWlsb3IgdG8ga25vdyB0aGUgbGVuZ3RoIG9mIGhpcyBsaW5lLCBcbi8vIHRob3VnaCBoZSBjYW5ub3Qgd2l0aCBpdCBmYXRob20gYWxsIHRoZSBkZXB0aHMgb2YgdGhlIG9jZWFuLlxuLy8gIC1Kb2huIExvY2tlXG5cbi8vLy8vLy8vLy8vLy8vLy8vXG4vLyBOYXZpZ2F0aW9uIC8vXG4vLy8vLy8vLy8vLy8vLy9cblxuaWYgKGxvZ2dlZEluKCkpe1xuICBcbiAgLy9Mb2dpbiAvIExvZ291dCBuYXZcbiAgdmFyICRsb2dpbmxpbmsgPSAkKCcjbG9naW4tbGluaycpO1xuICAkbG9naW5saW5rLmNoaWxkcmVuKCkudGV4dCgnTG9nb3V0Jyk7XG4gICRsb2dpbmxpbmsub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICByZWYudW5hdXRoKCk7XG4gIH0pO1xuICBcbiAgLy9BZGQgVGFza1xuICAkKCcjYWRkLXRhc2snKS5zaG93KCk7XG59XG4iLCIvLyBFdmVyeSBvbmNlIGluIGEgd2hpbGUsIHNvbWVvbmUgd2lsbCBtYWlsIG1lIGEgc2luZ2xlIHBvcGNvcm4ga2VybmVsIHRoYXQgZGlkbid0IHBvcC4gXG4vLyBJJ2xsIGdldCBvdXQgYSBmcmVzaCBrZXJuZWwsIHRhcGUgaXQgdG8gYSBwaWVjZSBvZiBwYXBlciBhbmQgbWFpbCBpdCBiYWNrIHRvIHRoZW0uXG4vLyAtIE9ydmlsbGUgUmVkZW5iYWNoZXJcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIE5vdGlmaWNhdGlvbnMgLy9cbi8vLy8vLy8vLy8vLy8vLy8vL1xuXG5mdW5jdGlvbiBOb3RpZmljYXRpb24odGV4dCwgdHlwZSwgdHJpZ2dlcikge1xuICB0aGlzLnRleHQgPSB0ZXh0O1xuICB0aGlzLnR5cGUgPSB0eXBlIHx8IFwiXCI7XG4gIFxuICB0aGlzLmluaXQgPSBmdW5jdGlvbigpe1xuICAgIHZhciBub3RlID0gJChcIjxkaXYgY2xhc3M9J25vdGUgXCIgKyB0aGlzLnR5cGUgKyBcIicgPlwiICsgdGhpcy50ZXh0ICsgXCI8c3BhbiBjbGFzcz0nbm90aWZpY2F0aW9uX19jbG9zZSBpb24tY2xvc2UtY2lyY2xlZCc+PC9zcGFuPjwvZGl2PlwiKTtcbiAgICAkKCcubm90aWZpY2F0aW9ucycpLmFwcGVuZChub3RlKTtcbiAgICBpZiAodHJpZ2dlcil7XG4gICAgICAkKG5vdGUpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7IHRyaWdnZXIoKSAgfSlcbiAgICB9XG4gIH1cbiAgXG4gIHRoaXMuaW5pdCgpO1xufVxuXG4kKCcubm90aWZpY2F0aW9ucycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gIGlmICgkKGV2ZW50LnRhcmdldCkuYXR0cignY2xhc3MnKS5pbmRleE9mKCdub3RlJykgIT0gLTEpe1xuICAgIHZhciBubiA9IGV2ZW50LnRhcmdldDtcbiAgICAkKG5uKS5zbGlkZVVwKCAyMDAsIGZ1bmN0aW9uKCkge1xuICAgICAgJChubikucmVtb3ZlKCk7XG4gICAgfSlcbiAgfVxufSk7XG4iLCJcblxudmFyIFRhc2sgPSB7XG4gICAgdGl0bGU6IFwiXCIsXG4gICAgZGV0YWlsczogXCJcIixcbiAgICBzY29yZTogMCxcbiAgICBmb2N1czogW11cbn1cblxudmFyIHN1Ym1pdFRhc2tGb3JtID0gZnVuY3Rpb24oKXtcbiAgcmVmLmNoaWxkKFwidGFza3NcIikuY2hpbGQodWlkKS5wdXNoKHtcbiAgICB0aXRsZTogVGFzay50aXRsZSxcbiAgICBkZXRhaWxzOiBUYXNrLmRldGFpbHMsXG4gICAgc2NvcmU6IFRhc2suc2NvcmUsXG4gICAgZm9jdXM6IFRhc2suZm9jdXMsXG4gICAgY29tcGxldGU6IGZhbHNlLFxuICAgIHB1YmxpYzogZmFsc2VcbiAgfSk7XG4gIFxuICBjbGVhclRhc2tGb3JtKCk7XG59XG5cbnZhciBjbGVhclRhc2tGb3JtID0gZnVuY3Rpb24oKXtcbiAgJCgnLnRhc2stZm9ybS1maWVsZCcpLnZhbCgnJyk7XG4gICQoJy5mb2N1c19vcHRpb24sIC5zY29yZV9vcHRpb24nKS5hdHRyKCdkYXRhLXNlbGVjdGVkJywgJ2ZhbHNlJylcbiAgXG4gIFRhc2sgPSB7IFxuICAgIHRpdGxlOiBcIlwiLFxuICAgIGRldGFpbHM6IFwiXCIsXG4gICAgc2NvcmU6IDAsXG4gICAgZm9jdXM6IFtdLFxuICAgIGNvbXBsZXRlOiBmYWxzZVxuICB9XG4gIFxufVxuXG4vLyEhIFdSSVRFIHZhbGlkYXRpb25cbnZhciB2YWxpZGF0ZU1vZGVsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0cnVlO1xufVxuXG5cbnZhciBidWlsZFRhc2sgPSBmdW5jdGlvbihpZCwgdGl0bGUsIGRldGFpbHMsIHNjb3JlLCBmb2N1cywgY29tcGxldGUpIHtcbiAgXG4gIGNvbnNvbGUubG9nKCdidWlsZGluZyB0YXNrJywgaWQsIHRpdGxlLCBkZXRhaWxzLCBzY29yZSwgZm9jdXMsIGNvbXBsZXRlKTtcbiAgdmFyIHRhc2sgPSB0aGlzLnZpZXcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0YXNrLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndGFzaycpO1xuICB0YXNrLnNldEF0dHJpYnV0ZSgnaWQnLCAnaWQnKTtcbiAgXG4gICAgdmFyIHRhc2tfaGVhZGVyID0gdGFzay5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKTtcbiAgICB0YXNrX2hlYWRlci5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Rhc2tfX2hlYWRlcicpO1xuICAgICAgdmFyIGhlYWRlcl9mb2N1cyA9IHRhc2tfaGVhZGVyLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpO1xuICAgICAgaGVhZGVyX2ZvY3VzLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnaGVhZGVyX2ZvY3VzJyk7XG4gICAgICBoZWFkZXJfZm9jdXMuaW5uZXJIVE1MID0gXCI8c3BhbiBjbGFzcz0naW9uLWNvZmZlZSc+PC9zcGFuPlwiO1xuICAgICAgdmFyIGhlYWRlcl90aXRsZSA9IHRhc2tfaGVhZGVyLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpO1xuICAgICAgaGVhZGVyX3RpdGxlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnaGVhZGVyX3RpdGxlJyk7XG4gICAgICBoZWFkZXJfdGl0bGUuaW5uZXJIVE1MID0gdGl0bGU7XG4gICAgICB2YXIgaGVhZGVyX3Njb3JlID0gdGFza19oZWFkZXIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7XG4gICAgICBoZWFkZXJfc2NvcmUuc2V0QXR0cmlidXRlKCdjbGFzcycsICdoZWFkZXJfc2NvcmUnKTtcbiAgICAgIGhlYWRlcl9zY29yZS5pbm5lckhUTUwgPSBcIjxzcGFuIGNsYXNzPSdpb24tZmxhc2gnPjwvc3Bhbj5cIiArIHNjb3JlICsgXCI8L2Rpdj5cIjtcbiAgICAgIFxuICAgIHZhciB0YXNrX2JvZHkgPSB0YXNrLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpO1xuICAgIHRhc2tfYm9keS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Rhc2tfX2JvZHkgYmctZGFya2JsdWUnKTtcbiAgICAgIHZhciB0YXNrX19ib2R5X2RldGFpbHMgPSB0YXNrX2JvZHkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7XG4gICAgICB0YXNrX19ib2R5X2RldGFpbHMuc2V0QXR0cmlidXRlKCdjbGFzcycsICd0YXNrX19ib2R5X2RldGFpbHMnKTtcbiAgICAgIHRhc2tfX2JvZHlfZGV0YWlscy5pbm5lckhUTUwgPSBkZXRhaWxzO1xuICAgICAgXG4gICAgICB2YXIgdGFza19fYm9keV9hY3Rpb25zID0gdGFza19ib2R5LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpO1xuICAgICAgdGFza19fYm9keV9hY3Rpb25zLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndGFza19fYm9keV9hY3Rpb25zJyk7XG4gICAgICAgIHZhciB0YXNrX2FjdGlvbiA9IHRhc2tfX2JvZHlfYWN0aW9ucy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKTtcbiAgICAgICAgdGFza19hY3Rpb24uc2V0QXR0cmlidXRlKCdjbGFzcycsICd0YXNrX19hY3Rpb24gYmctZ3JleS1ob3ZlcicpO1xuICAgICAgICB0YXNrX2FjdGlvbi5pbm5lckhUTUwgPSBcIjxzcGFuIGNsYXNzPSdpb24tZWRpdCc+PC9zcGFuPlwiO1xuICAgICAgICB2YXIgdGFza19hY3Rpb24gPSB0YXNrX19ib2R5X2FjdGlvbnMuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7XG4gICAgICAgIHRhc2tfYWN0aW9uLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAndGFza19fYWN0aW9uIGJnLWdyZWVuLWhvdmVyJyk7XG4gICAgICAgIHRhc2tfYWN0aW9uLmlubmVySFRNTCA9IFwiPHNwYW4gY2xhc3M9J2lvbi1jaGVja21hcmsnPjwvc3Bhbj5cIjtcbiAgICAgICAgdmFyIHRhc2tfYWN0aW9uID0gdGFza19fYm9keV9hY3Rpb25zLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpO1xuICAgICAgICB0YXNrX2FjdGlvbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3Rhc2tfX2FjdGlvbiBiZy1yZWQtaG92ZXInKTtcbiAgICAgICAgdGFza19hY3Rpb24uaW5uZXJIVE1MID0gXCI8c3BhbiBjbGFzcz0naW9uLWNsb3NlJz48L3NwYW4+XCI7XG4gICAgICAgIFxuICAkKHRhc2spLmFwcGVuZFRvKCcudGFza3NfY29udGFpbmVyJyk7XG59XG5cblxuXG4vL0xpc3RlbmVyc1xuaWYgKHJlZi5nZXRBdXRoKCkpe1xuICAgIFxuICB2YXIgdWlkID0gcmVmLmdldEF1dGgoKS51aWQ7XG4gIFxuICAvL09uIGNoYW5nZSwgcmVmbG93XG4gIHJlZi5jaGlsZChcInRhc2tzXCIpLmNoaWxkKHVpZCkub24oXCJ2YWx1ZVwiLCBmdW5jdGlvbihzbmFwc2hvdCkge1xuICAgIGlmICghJC5pc0VtcHR5T2JqZWN0KHNuYXBzaG90LnZhbCgpKSl7XG4gICAgICAkLmVhY2goIHNuYXBzaG90LnZhbCgpLCBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcbiAgICAgICAgYnVpbGRUYXNrKGtleSwgdmFsdWUudGl0bGUsIHZhbHVlLmRldGFpbHMsIHZhbHVlLnNjb3JlLCB2YWx1ZS5mb2N1cywgdmFsdWUuY29tcGxldGUpO1xuICAgICAgfSk7IFxuICAgIH1cbiAgfSk7XG5cbn0gZWxzZSB7IGNvbnNvbGUubG9nKFwiTm8gdXNlciBsb2dnZWQgaW4uXCIpIH1cblxuXG4vL1Nob3cvaGlkZSBuZXcgZm9ybVxuJCgnLnRhc2stbmV3X19jbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICQoIFwiI3Rhc2stbmV3XCIgKS5zbGlkZVVwKCBcImZhc3RcIiwgZnVuY3Rpb24oKSB7XG4gICAgJCggXCIjdGFzay1uZXdcIiApLmhpZGUoKTtcbiAgfSk7XG59KTtcblxuJCgnI2FkZC10YXNrJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgJCggXCIjdGFzay1uZXdcIiApLnNsaWRlRG93biggXCJmYXN0XCIsIGZ1bmN0aW9uKCl7XG4gICAgJCggXCIjdGFzay1uZXdcIiApLnNob3coKTtcbiAgfSlcbn0pO1xuXG5cbi8vVGFzayBoZWFkZXIgdG9nZ2xlICEhUmV2aWV3XG5cbiQoJy50YXNrc19jb250YWluZXInKS5vbignY2xpY2snLCAnLnRhc2tfX2hlYWRlcicsIGZ1bmN0aW9uKCkge1xuICAkKHRoaXMpLnBhcmVudCgpLmZpbmQoJy50YXNrX19ib2R5Jykuc2xpZGVUb2dnbGUoMTAwKTtcbn0pO1xuXG5cblxuLy9UZXh0IElucHV0c1xuJCgnLnRhc2tfX2lucHV0Jykub24oJ2tleXVwJywgZnVuY3Rpb24oKXsgLy9UaXRsZVxuICBUYXNrLnRpdGxlID0gJCh0aGlzKS52YWwoKTtcbn0pXG4kKCcudGFza19fdGV4dGFyZWEnKS5vbigna2V5dXAnLCBmdW5jdGlvbigpeyAvL0RldGFpbHNcbiAgVGFzay5kZXRhaWxzID0gJCh0aGlzKS52YWwoKTtcbn0pXG5cblxuXG4vL0ZvY3VzIFNlbGVjdGlvblxuJCgnLmZvY3VzX29wdGlvbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gIHRvZ2dsZVNlbGVjdGVkKHRoaXMpO1xuICBcbiAgLy9Nb2RpZnkgbW9kZWxcbiAgVGFzay5mb2N1cyA9IFtdO1xuICAkKCcuZm9jdXNfb3B0aW9uW2RhdGEtc2VsZWN0ZWQ9XCJ0cnVlXCJdJykuZWFjaChmdW5jdGlvbiggaWksIG5vZGUgKSB7XG4gICAgVGFzay5mb2N1cy5wdXNoKCAkKG5vZGUpLnRleHQoKSApO1xuICB9KTtcbn0pO1xuXG5cbi8vU2NvcmUgU2VsZWN0aW9uXG4kKCcuc2NvcmVfb3B0aW9uJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgJCgnLnNjb3JlX29wdGlvbltkYXRhLXNlbGVjdGVkPVwidHJ1ZVwiXScpLmF0dHIoJ2RhdGEtc2VsZWN0ZWQnLCAnZmFsc2UnKTtcbiAgdG9nZ2xlU2VsZWN0ZWQodGhpcyk7XG4gIFRhc2suc2NvcmUgPSBwYXJzZUludCggJCh0aGlzKS50ZXh0KCkudHJpbSgpIClcbn0pO1xuXG5cbi8vU3VibWl0IGJ1dHRvblxuJCgnI3Rhc2tfc3VibWl0Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgaWYgKHZhbGlkYXRlTW9kZWwoVGFzaykpe1xuICAgIHN1Ym1pdFRhc2tGb3JtKCk7XG4gIH07XG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==